{"version":3,"sources":["AddColorImages.js","ColorResults.js","App.js","index.js"],"names":["thumbsContainer","display","flexDirection","flexWrap","marginTop","thumb","borderRadius","border","marginBottom","marginRight","width","height","padding","boxSizing","thumbInner","minWidth","overflow","img","Container","styled","div","props","isDragAccept","isDragReject","isDragActive","getColor","AddColorImages","parentProps","useState","files","setFiles","useDropzone","accept","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","parentCallback","getRootProps","getInputProps","thumbs","style","src","name","useEffect","forEach","revokeObjectURL","Fragment","Typography","variant","gutterBottom","className","useStyles","makeStyles","theme","listItem","spacing","total","fontWeight","title","square","ColorResults","classes","data","backgroundColor","val","appBar","position","background","color","alignItems","footer","layout","marginLeft","breakpoints","up","paper","stepper","buttons","justifyContent","button","progress","divider","textAlign","steps","App","React","colorImages","setColorImages","isSubmit","setIsSubmit","Results","setResults","activeStep","setActiveStep","AddColorImagesCallback","CssBaseline","AppBar","Toolbar","noWrap","Paper","Stepper","label","Step","StepLabel","length","Button","onClick","step","Error","getStepContent","CircularProgress","formData","FormData","alert","append","options","headers","method","body","fetch","then","res","json","currID","setInterval","a","new_data","clearInterval","disabled","maxWidth","align","Date","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.101fd5fd.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport styled from 'styled-components';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst thumbsContainer = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  flexWrap: 'wrap',\r\n  marginTop: 16\r\n};\r\n\r\nconst thumb = {\r\n  display: 'inline-flex',\r\n  borderRadius: 2,\r\n  border: '1px solid #eaeaea',\r\n  marginBottom: 8,\r\n  marginRight: 8,\r\n  width: 300,\r\n  height: 300,\r\n  padding: 4,\r\n  boxSizing: 'border-box'\r\n};\r\n\r\nconst thumbInner = {\r\n  display: 'flex',\r\n  minWidth: 0,\r\n  overflow: 'hidden'\r\n};\r\n\r\nconst img = {\r\n  display: 'block',\r\n  width: 'auto',\r\n  height: '100%'\r\n};\r\n\r\nconst getColor = (props) => {\r\n  if (props.isDragAccept) {\r\n      return '#00e676';\r\n  }\r\n  if (props.isDragReject) {\r\n      return '#ff1744';\r\n  }\r\n  if (props.isDragActive) {\r\n      return '#2196f3';\r\n  }\r\n  return '#eeeeee';\r\n}\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  border-width: 2px;\r\n  border-radius: 2px;\r\n  border-color: ${props => getColor(props)};\r\n  border-style: dashed;\r\n  background-color: #fafafa;\r\n  color: #bdbdbd;\r\n  outline: none;\r\n  transition: border .24s ease-in-out;\r\n`;  \r\n\r\nexport default function AddColorImages(props) {\r\n    const parentProps = {...props};\r\n    const [files, setFiles] = useState([]);\r\n    const {getRootProps, getInputProps,isDragActive,\r\n      isDragAccept, isDragReject} = useDropzone({\r\n      accept: 'image/*',\r\n      onDrop: acceptedFiles => {\r\n        setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n          preview: URL.createObjectURL(file)\r\n        })));\r\n        parentProps.parentCallback(acceptedFiles[0]);\r\n      }\r\n    });\r\n    const thumbs = files.map(file => (\r\n      <div style={thumb} key={file.name}>\r\n        <div style={thumbInner}>\r\n          <img\r\n            src={file.preview}\r\n            style={img}\r\n          />\r\n        </div>\r\n      </div>\r\n    ));\r\n  \r\n    useEffect(() => () => {\r\n      files.forEach(file => URL.revokeObjectURL(file.preview));\r\n    }, [files]);\r\n  \r\n  return (\r\n    <React.Fragment>\r\n    <Typography variant=\"h6\" gutterBottom>\r\n      Upload image to analyze color\r\n    </Typography>\r\n    <div className=\"container\">\r\n      <Container {...getRootProps({className: 'dropzone',isDragActive, isDragAccept, isDragReject})}>\r\n        <input {...getInputProps()} />\r\n        <p>Drag 'n' drop some files here, or click to select files</p>\r\n        <em>(Only *.jpeg and *.png images will be accepted)</em>   \r\n      </Container>\r\n      <aside style={thumbsContainer}>\r\n        {thumbs}\r\n      </aside>\r\n    </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    padding: theme.spacing(1, 0),\r\n  },\r\n  total: {\r\n    fontWeight: 700,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  square: {\r\n    width: '100px',\r\n    height: '100px',\r\n    display: 'inline-flex'\r\n  }\r\n}));\r\nexport default function ColorResults(props) {\r\n  const classes = useStyles();\r\n  const parentProps = {...props};\r\n  if(parentProps.data && parentProps.data !== {})\r\n  {\r\n    return (\r\n      <React.Fragment>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          The Colors We Found\r\n        </Typography>\r\n        <Typography gutterBottom>\r\n        {parentProps.data.name}\r\n        </Typography>\r\n        <div className={classes.square} style={{backgroundColor: `rgb(${parentProps.data.val})`}}> </div>\r\n      </React.Fragment>\r\n      );\r\n  } else {\r\n    return (\r\n    <React.Fragment>\r\n      Results\r\n    </React.Fragment>\r\n    );\r\n  }\r\n  \r\n  \r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport AddColorImages from './AddColorImages';\r\nimport ColorResults from './ColorResults';\r\nimport _ from 'lodash';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport './App.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n    background: '#282c34',\r\n    color: 'white',\r\n    alignItems: 'center',\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(3, 2),\r\n    marginTop: 'auto',\r\n    background: '#282c34',\r\n    color: 'white',\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  progress: {\r\n    marginTop: 'auto',\r\n    color: 'green'\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto'\r\n  },\r\n  listItem: {\r\n    display: 'block',\r\n    textAlign: 'center'\r\n  }\r\n}));\r\n\r\nconst steps = ['Upload Image', 'Result'];\r\n\r\nfunction App() {\r\n  const [colorImages, setColorImages] = React.useState(0);\r\n  const [isSubmit, setIsSubmit] = React.useState(0);\r\n  const [Results, setResults] = React.useState({});\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const AddColorImagesCallback = (colorImages) => {\r\n    setColorImages(colorImages)\r\n  }\r\n  function getStepContent(step) {\r\n    switch (step) {\r\n      case 0:\r\n        return <AddColorImages parentCallback={AddColorImagesCallback} />;\r\n      case 1:\r\n        return <ColorResults data={Results}/>;\r\n      default:\r\n        throw new Error('Unknown step');\r\n    }\r\n  }\r\n  const handleNext = () => {\r\n    if (activeStep === 0) {\r\n      let formData = new FormData();\r\n      if(colorImages === null || colorImages === 0)\r\n      {\r\n          alert(\"please enter an image of a test to check\");\r\n          return;\r\n      }\r\n      formData.append('images', colorImages, colorImages.name)\r\n      const options = {\r\n        headers: {\r\n          'Accept': 'application/json',\r\n        },\r\n        method: 'POST',\r\n        body: formData,\r\n      };\r\n      setIsSubmit(1);\r\n      fetch('/api/checkColor', options).then(res => res.json()).then(data => {\r\n            const currID = setInterval(async () => {\r\n            const res = await fetch(`/api/returnResults/`+ data['task_id'], {\r\n             headers : { \r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n             }});\r\n            const new_data = await res.json();\r\n              if(new_data['status'] == 'finished'){\r\n                setResults(new_data['result']);\r\n                setIsSubmit(0);\r\n                clearInterval(currID);\r\n                setActiveStep(activeStep + 1);\r\n              }\r\n              else if(new_data['status'] == 'not started')\r\n              {\r\n                clearInterval(currID);\r\n                alert('internal error, please try again');\r\n              }\r\n            }, 3000);\r\n      });\r\n    }\r\n    if (activeStep === steps.length - 1) {\r\n      setActiveStep(activeStep + 1);\r\n    }\r\n  };\r\n\r\n  const restartApp = () => {\r\n    setColorImages(0);\r\n    setResults({});\r\n    setActiveStep(0);\r\n    setIsSubmit(0);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <React.Fragment >\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              Cooler Match\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <main className={classes.layout}>\r\n          <Paper className={classes.paper}>\r\n            <Stepper activeStep={activeStep} className={classes.stepper}>\r\n              {steps.map((label) => (\r\n                <Step key={label}>\r\n                  <StepLabel>{label}</StepLabel>\r\n                </Step>\r\n              ))}\r\n            </Stepper>\r\n            <React.Fragment>\r\n              {activeStep === steps.length ? (\r\n                <React.Fragment>\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Hope we were helful!\r\n                  </Typography>\r\n                  <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={restartApp}\r\n                        className={classes.button}\r\n                      >\r\n                        Again\r\n                      </Button>\r\n                </React.Fragment>\r\n              ) : (\r\n                  <React.Fragment>\r\n                    {getStepContent(activeStep)}\r\n                    <div className={classes.buttons}>\r\n                      { isSubmit ? <CircularProgress className={classes.progress}/> : <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleNext}\r\n                        className={classes.button}\r\n                        disabled={isSubmit}\r\n                      >{activeStep === steps.length - 1 ? 'Submit' : 'Next'}\r\n                      </Button>}\r\n                    </div>\r\n                  </React.Fragment>\r\n                )}\r\n              { isSubmit ? <span>Searching our catalogue 🔎</span> : null} \r\n            </React.Fragment>\r\n          </Paper>\r\n        </main>\r\n        <footer className={classes.footer}>\r\n          <Container maxWidth=\"sm\">\r\n            <Typography variant=\"body2\" color=\"inherit\" align=\"center\">\r\n              {'By Cooler Match Team '}\r\n              {new Date().getFullYear()}\r\n              {'.'}\r\n            </Typography>\r\n          </Container>\r\n        </footer>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}